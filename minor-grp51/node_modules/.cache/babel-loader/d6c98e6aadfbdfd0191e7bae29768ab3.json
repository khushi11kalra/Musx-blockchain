{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createQuery = configure.configure(api => {\n  function query(peerId) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const res = await api.post('dht/query', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            arg: peerId.toString(),\n            ...options\n          }),\n          headers: options.headers\n        });\n        for await (let message of res.ndjson()) {\n          message = objectToCamel.objectToCamel(message);\n          message.responses = (message.responses || []).map(_ref => {\n            let {\n              ID,\n              Addrs\n            } = _ref;\n            return {\n              id: ID,\n              addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n            };\n          });\n          yield message;\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return query;\n});\nexports.createQuery = createQuery;","map":{"version":3,"names":["Object","defineProperty","exports","value","multiaddr","require","objectToCamel","configure","toUrlSearchParams","createQuery","api","query","peerId","options","arguments","length","undefined","res","post","signal","searchParams","arg","toString","headers","message","ndjson","responses","map","_ref","ID","Addrs","id","addrs","a","Multiaddr","e","Promise","reject"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/dht/query.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createQuery = configure.configure(api => {\n  async function* query(peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (let message of res.ndjson()) {\n      message = objectToCamel.objectToCamel(message);\n      message.responses = (message.responses || []).map(({ID, Addrs}) => ({\n        id: ID,\n        addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n      }));\n      yield message;\n    }\n  }\n  return query;\n});\n\nexports.createQuery = createQuery;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIC,aAAa,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACxD,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAMI,WAAW,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC7C,SAAgBC,KAAKA,CAACC,MAAM;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QAC1C,MAAMG,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,WAAW,EAAE;UACtCC,MAAM,EAAEN,OAAO,CAACM,MAAM;UACtBC,YAAY,EAAEZ,iBAAiB,CAACA,iBAAiB,CAAC;YAChDa,GAAG,EAAET,MAAM,CAACU,QAAQ,CAAC,CAAC;YACtB,GAAGT;UACL,CAAC,CAAC;UACFU,OAAO,EAAEV,OAAO,CAACU;QACnB,CAAC,CAAC;QACF,WAAW,IAAIC,OAAO,IAAIP,GAAG,CAACQ,MAAM,CAAC,CAAC,EAAE;UACtCD,OAAO,GAAGlB,aAAa,CAACA,aAAa,CAACkB,OAAO,CAAC;UAC9CA,OAAO,CAACE,SAAS,GAAG,CAACF,OAAO,CAACE,SAAS,IAAI,EAAE,EAAEC,GAAG,CAACC,IAAA;YAAA,IAAC;cAACC,EAAE;cAAEC;YAAK,CAAC,GAAAF,IAAA;YAAA,OAAM;cAClEG,EAAE,EAAEF,EAAE;cACNG,KAAK,EAAE,CAACF,KAAK,IAAI,EAAE,EAAEH,GAAG,CAACM,CAAC,IAAI,IAAI7B,SAAS,CAAC8B,SAAS,CAACD,CAAC,CAAC;YAC1D,CAAC;UAAA,CAAC,CAAC;UACH,MAAMT,OAAO;QACf;MACF,CAAC;IAAA,SAAAW,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOxB,KAAK;AACd,CAAC,CAAC;AAEFT,OAAO,CAACO,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script"}