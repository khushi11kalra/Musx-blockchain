{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar objectToCamel = require('./lib/object-to-camel.js');\nvar configure = require('./lib/configure.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nvar abortSignal = require('./lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\nconst createAddAll = configure.configure(api => {\n  function addAll(source) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const controller = new nativeAbortController.AbortController();\n        const signal = abortSignal.abortSignal(controller.signal, options.signal);\n        const {\n          headers,\n          body,\n          total,\n          parts\n        } = await multipartRequest.multipartRequest(source, controller, options.headers);\n        const [progressFn, onUploadProgress] = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [undefined, undefined];\n        const res = await api.post('add', {\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            'stream-channels': true,\n            ...options,\n            progress: Boolean(progressFn)\n          }),\n          onUploadProgress,\n          signal,\n          headers,\n          body\n        });\n        for await (let file of res.ndjson()) {\n          file = objectToCamel.objectToCamel(file);\n          if (file.hash !== undefined) {\n            yield toCoreInterface(file);\n          } else if (progressFn) {\n            progressFn(file.bytes || 0, file.name);\n          }\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return addAll;\n});\nconst createProgressHandler = (total, parts, progress) => parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined];\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0;\n  const count = parts.length;\n  return _ref => {\n    let {\n      loaded,\n      total\n    } = _ref;\n    const position = Math.floor(loaded / total * size);\n    while (index < count) {\n      const {\n        start,\n        end,\n        name\n      } = parts[index];\n      if (position < end) {\n        progress(position - start, name);\n        break;\n      } else {\n        progress(end - start, name);\n        index += 1;\n      }\n    }\n  };\n};\nfunction toCoreInterface(_ref2) {\n  let {\n    name,\n    hash,\n    size,\n    mode,\n    mtime,\n    mtimeNsecs\n  } = _ref2;\n  const output = {\n    path: name,\n    cid: cid.CID.parse(hash),\n    size: parseInt(size)\n  };\n  if (mode != null) {\n    output.mode = parseInt(mode, 8);\n  }\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    };\n  }\n  return output;\n}\nexports.createAddAll = createAddAll;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","objectToCamel","configure","multipartRequest","toUrlSearchParams","abortSignal","nativeAbortController","createAddAll","api","addAll","source","options","arguments","length","undefined","controller","AbortController","signal","headers","body","total","parts","progressFn","onUploadProgress","progress","createProgressHandler","res","post","searchParams","Boolean","file","ndjson","hash","toCoreInterface","bytes","name","e","Promise","reject","createOnUploadProgress","size","index","count","_ref","loaded","position","Math","floor","start","end","_ref2","mode","mtime","mtimeNsecs","output","path","CID","parse","parseInt","secs","nsecs"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/add-all.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar objectToCamel = require('./lib/object-to-camel.js');\nvar configure = require('./lib/configure.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nvar abortSignal = require('./lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\n\nconst createAddAll = configure.configure(api => {\n  async function* addAll(source, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const {headers, body, total, parts} = await multipartRequest.multipartRequest(source, controller, options.headers);\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [\n      undefined,\n      undefined\n    ];\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    });\n    for await (let file of res.ndjson()) {\n      file = objectToCamel.objectToCamel(file);\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file);\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name);\n      }\n    }\n  }\n  return addAll;\n});\nconst createProgressHandler = (total, parts, progress) => parts ? [\n  undefined,\n  createOnUploadProgress(total, parts, progress)\n] : [\n  progress,\n  undefined\n];\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0;\n  const count = parts.length;\n  return ({loaded, total}) => {\n    const position = Math.floor(loaded / total * size);\n    while (index < count) {\n      const {start, end, name} = parts[index];\n      if (position < end) {\n        progress(position - start, name);\n        break;\n      } else {\n        progress(end - start, name);\n        index += 1;\n      }\n    }\n  };\n};\nfunction toCoreInterface({name, hash, size, mode, mtime, mtimeNsecs}) {\n  const output = {\n    path: name,\n    cid: cid.CID.parse(hash),\n    size: parseInt(size)\n  };\n  if (mode != null) {\n    output.mode = parseInt(mode, 8);\n  }\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    };\n  }\n  return output;\n}\n\nexports.createAddAll = createAddAll;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}