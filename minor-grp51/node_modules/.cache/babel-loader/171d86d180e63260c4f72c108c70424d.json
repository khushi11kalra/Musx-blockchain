{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createSet = configure.configure(api => {\n  const set = async function (key, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return {\n        arg: [key, value.toString()],\n        bool: true\n      };\n    case 'string':\n      return {\n        arg: [key, value]\n      };\n    default:\n      return {\n        arg: [key, JSON.stringify(value)],\n        json: true\n      };\n  }\n};\nexports.createSet = createSet;","map":{"version":3,"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createSet","api","set","key","options","arguments","length","undefined","Error","params","encodeParam","res","post","signal","searchParams","headers","text","arg","toString","bool","JSON","stringify","json"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/config/set.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createSet = configure.configure(api => {\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type');\n    }\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    };\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(params),\n      headers: options.headers\n    });\n    await res.text();\n  };\n  return set;\n});\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n  case 'boolean':\n    return {\n      arg: [\n        key,\n        value.toString()\n      ],\n      bool: true\n    };\n  case 'string':\n    return {\n      arg: [\n        key,\n        value\n      ]\n    };\n  default:\n    return {\n      arg: [\n        key,\n        JSON.stringify(value)\n      ],\n      json: true\n    };\n  }\n};\n\nexports.createSet = createSet;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAME,SAAS,GAAGH,SAAS,CAACA,SAAS,CAACI,GAAG,IAAI;EAC3C,MAAMC,GAAG,GAAG,eAAAA,CAAOC,GAAG,EAAEP,KAAK,EAAmB;IAAA,IAAjBQ,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACzC,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIK,KAAK,CAAC,kBAAkB,CAAC;IACrC;IACA,MAAMC,MAAM,GAAG;MACb,GAAGL,OAAO;MACV,GAAGM,WAAW,CAACP,GAAG,EAAEP,KAAK;IAC3B,CAAC;IACD,MAAMe,GAAG,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,QAAQ,EAAE;MACnCC,MAAM,EAAET,OAAO,CAACS,MAAM;MACtBC,YAAY,EAAEf,iBAAiB,CAACA,iBAAiB,CAACU,MAAM,CAAC;MACzDM,OAAO,EAAEX,OAAO,CAACW;IACnB,CAAC,CAAC;IACF,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAClB,CAAC;EACD,OAAOd,GAAG;AACZ,CAAC,CAAC;AACF,MAAMQ,WAAW,GAAGA,CAACP,GAAG,EAAEP,KAAK,KAAK;EAClC,QAAQ,OAAOA,KAAK;IACpB,KAAK,SAAS;MACZ,OAAO;QACLqB,GAAG,EAAE,CACHd,GAAG,EACHP,KAAK,CAACsB,QAAQ,CAAC,CAAC,CACjB;QACDC,IAAI,EAAE;MACR,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACLF,GAAG,EAAE,CACHd,GAAG,EACHP,KAAK;MAET,CAAC;IACH;MACE,OAAO;QACLqB,GAAG,EAAE,CACHd,GAAG,EACHiB,IAAI,CAACC,SAAS,CAACzB,KAAK,CAAC,CACtB;QACD0B,IAAI,EAAE;MACR,CAAC;EACH;AACF,CAAC;AAED3B,OAAO,CAACK,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}