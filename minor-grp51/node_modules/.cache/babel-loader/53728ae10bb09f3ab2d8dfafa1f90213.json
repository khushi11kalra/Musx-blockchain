{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar local = require('./local.js');\nconst createRefs = configure.configure((api, opts) => {\n  const refs = function (args) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const argsArr = Array.isArray(args) ? args : [args];\n        const res = await api.post('refs', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            arg: argsArr.map(arg => `${arg instanceof Uint8Array ? cid.CID.decode(arg) : arg}`),\n            ...options\n          }),\n          headers: options.headers,\n          transform: objectToCamel.objectToCamel\n        });\n        yield* res.ndjson();\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  return Object.assign(refs, {\n    local: local.createLocal(opts)\n  });\n});\nexports.createRefs = createRefs;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","objectToCamel","configure","toUrlSearchParams","local","createRefs","api","opts","refs","args","options","arguments","length","undefined","argsArr","Array","isArray","res","post","signal","searchParams","arg","map","Uint8Array","CID","decode","headers","transform","ndjson","e","Promise","reject","assign","createLocal"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/refs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar local = require('./local.js');\n\nconst createRefs = configure.configure((api, opts) => {\n  const refs = async function* (args, options = {}) {\n    const argsArr = Array.isArray(args) ? args : [args];\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: argsArr.map(arg => `${ arg instanceof Uint8Array ? cid.CID.decode(arg) : arg }`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel.objectToCamel\n    });\n    yield* res.ndjson();\n  };\n  return Object.assign(refs, { local: local.createLocal(opts) });\n});\n\nexports.createRefs = createRefs;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIC,aAAa,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACxD,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AACjE,IAAII,KAAK,GAAGJ,OAAO,CAAC,YAAY,CAAC;AAEjC,MAAMK,UAAU,GAAGH,SAAS,CAACA,SAAS,CAAC,CAACI,GAAG,EAAEC,IAAI,KAAK;EACpD,MAAMC,IAAI,GAAG,SAAAA,CAAiBC,IAAI;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QAChD,MAAMG,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACP,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;QACnD,MAAMQ,GAAG,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,MAAM,EAAE;UACjCC,MAAM,EAAET,OAAO,CAACS,MAAM;UACtBC,YAAY,EAAEjB,iBAAiB,CAACA,iBAAiB,CAAC;YAChDkB,GAAG,EAAEP,OAAO,CAACQ,GAAG,CAACD,GAAG,IAAK,GAAGA,GAAG,YAAYE,UAAU,GAAGxB,GAAG,CAACyB,GAAG,CAACC,MAAM,CAACJ,GAAG,CAAC,GAAGA,GAAK,EAAC,CAAC;YACrF,GAAGX;UACL,CAAC,CAAC;UACFgB,OAAO,EAAEhB,OAAO,CAACgB,OAAO;UACxBC,SAAS,EAAE1B,aAAa,CAACA;QAC3B,CAAC,CAAC;QACF,OAAOgB,GAAG,CAACW,MAAM,CAAC,CAAC;MACrB,CAAC;IAAA,SAAAC,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOlC,MAAM,CAACqC,MAAM,CAACxB,IAAI,EAAE;IAAEJ,KAAK,EAAEA,KAAK,CAAC6B,WAAW,CAAC1B,IAAI;EAAE,CAAC,CAAC;AAChE,CAAC,CAAC;AAEFV,OAAO,CAACQ,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script"}