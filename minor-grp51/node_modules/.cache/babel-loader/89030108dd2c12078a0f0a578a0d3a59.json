{"ast":null,"code":"const Blockchain = {\n  getBlockByNumber(blockNumber, provider, callback) {\n    const params = [blockNumber, true];\n    provider.send({\n      jsonrpc: \"2.0\",\n      method: \"eth_getBlockByNumber\",\n      params,\n      id: Date.now()\n    }, callback);\n  },\n  getBlockByHash(blockHash, provider, callback) {\n    const params = [blockHash, true];\n    provider.send({\n      jsonrpc: \"2.0\",\n      method: \"eth_getBlockByHash\",\n      params,\n      id: Date.now()\n    }, callback);\n  },\n  parse(uri) {\n    const parsed = {};\n    if (uri.indexOf(\"blockchain://\") !== 0) return parsed;\n    const cleanUri = uri.replace(\"blockchain://\", \"\");\n    const pieces = cleanUri.split(\"/block/\");\n    parsed.genesis_hash = `0x${pieces[0]}`;\n    parsed.block_hash = `0x${pieces[1]}`;\n    return parsed;\n  },\n  asURI(provider, callback) {\n    let genesis, latest;\n    this.getBlockByNumber(\"0x0\", provider, (err, _ref) => {\n      let {\n        result\n      } = _ref;\n      if (err) return callback(err);\n      genesis = result;\n      this.getBlockByNumber(\"latest\", provider, (err, _ref2) => {\n        let {\n          result\n        } = _ref2;\n        if (err) return callback(err);\n        latest = result;\n        const url = `blockchain://${genesis.hash.replace(\"0x\", \"\")}/block/${latest.hash.replace(\"0x\", \"\")}`;\n        callback(null, url);\n      });\n    });\n  },\n  matches(uri, provider, callback) {\n    const parsedUri = this.parse(uri);\n    const expected_genesis = parsedUri.genesis_hash;\n    const expected_block = parsedUri.block_hash;\n    this.getBlockByNumber(\"0x0\", provider, (err, _ref3) => {\n      let {\n        result\n      } = _ref3;\n      if (err) return callback(err);\n      const block = result;\n      if (block.hash !== expected_genesis) return callback(null, false);\n      this.getBlockByHash(expected_block, provider, (err, _ref4) => {\n        let {\n          result\n        } = _ref4;\n        // Treat an error as if the block didn't exist. This is because\n        // some clients respond differently.\n        const block = result;\n        if (err || block == null) {\n          return callback(null, false);\n        }\n        callback(null, true);\n      });\n    });\n  }\n};\nmodule.exports = Blockchain;","map":{"version":3,"names":["Blockchain","getBlockByNumber","blockNumber","provider","callback","params","send","jsonrpc","method","id","Date","now","getBlockByHash","blockHash","parse","uri","parsed","indexOf","cleanUri","replace","pieces","split","genesis_hash","block_hash","asURI","genesis","latest","err","_ref","result","_ref2","url","hash","matches","parsedUri","expected_genesis","expected_block","_ref3","block","_ref4","module","exports"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/@truffle/blockchain-utils/index.js"],"sourcesContent":["const Blockchain = {\n  getBlockByNumber(blockNumber, provider, callback) {\n    const params = [blockNumber, true];\n    provider.send(\n      {\n        jsonrpc: \"2.0\",\n        method: \"eth_getBlockByNumber\",\n        params,\n        id: Date.now()\n      },\n      callback\n    );\n  },\n\n  getBlockByHash(blockHash, provider, callback) {\n    const params = [blockHash, true];\n    provider.send(\n      {\n        jsonrpc: \"2.0\",\n        method: \"eth_getBlockByHash\",\n        params,\n        id: Date.now()\n      },\n      callback\n    );\n  },\n\n  parse(uri) {\n    const parsed = {};\n    if (uri.indexOf(\"blockchain://\") !== 0) return parsed;\n\n    const cleanUri = uri.replace(\"blockchain://\", \"\");\n\n    const pieces = cleanUri.split(\"/block/\");\n\n    parsed.genesis_hash = `0x${pieces[0]}`;\n    parsed.block_hash = `0x${pieces[1]}`;\n\n    return parsed;\n  },\n\n  asURI(provider, callback) {\n    let genesis, latest;\n\n    this.getBlockByNumber(\"0x0\", provider, (err, { result }) => {\n      if (err) return callback(err);\n      genesis = result;\n\n      this.getBlockByNumber(\"latest\", provider, (err, { result }) => {\n        if (err) return callback(err);\n        latest = result;\n        const url = `blockchain://${genesis.hash.replace(\n          \"0x\",\n          \"\"\n        )}/block/${latest.hash.replace(\"0x\", \"\")}`;\n        callback(null, url);\n      });\n    });\n  },\n\n  matches(uri, provider, callback) {\n    const parsedUri = this.parse(uri);\n\n    const expected_genesis = parsedUri.genesis_hash;\n    const expected_block = parsedUri.block_hash;\n\n    this.getBlockByNumber(\"0x0\", provider, (err, { result }) => {\n      if (err) return callback(err);\n      const block = result;\n      if (block.hash !== expected_genesis) return callback(null, false);\n\n      this.getBlockByHash(expected_block, provider, (err, { result }) => {\n        // Treat an error as if the block didn't exist. This is because\n        // some clients respond differently.\n        const block = result;\n        if (err || block == null) {\n          return callback(null, false);\n        }\n\n        callback(null, true);\n      });\n    });\n  }\n};\n\nmodule.exports = Blockchain;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}