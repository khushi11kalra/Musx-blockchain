{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\nvar debug = require('debug');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\nconst log = debug__default['default']('ipfs-http-client:pubsub:subscribe');\nconst createSubscribe = (options, subsTracker) => {\n  return configure.configure(api => {\n    async function subscribe(topic, handler) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          arg: topic,\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, _ref) {\n  let {\n    onMessage,\n    onEnd,\n    onError\n  } = _ref;\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: toString.toString(fromString.fromString(msg.from, 'base64pad'), 'base58btc'),\n          data: fromString.fromString(msg.data, 'base64pad'),\n          seqno: fromString.fromString(msg.seqno, 'base64pad'),\n          topicIDs: msg.topicIDs\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${err.message}`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n    case 'aborted':\n      return true;\n    case 'abort':\n      return true;\n    default:\n      return error.name === 'AbortError';\n  }\n};\nexports.createSubscribe = createSubscribe;","map":{"version":3,"names":["Object","defineProperty","exports","value","fromString","require","toString","debug","configure","toUrlSearchParams","_interopDefaultLegacy","e","debug__default","log","createSubscribe","options","subsTracker","api","subscribe","topic","handler","arguments","length","undefined","signal","done","fail","result","Promise","resolve","reject","ffWorkaround","setTimeout","post","searchParams","arg","headers","catch","err","unsubscribe","then","response","clearTimeout","readMessages","onMessage","onEnd","onError","_ref","msg","ndjson","from","data","seqno","topicIDs","message","isAbortError","error","type","name"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/pubsub/subscribe.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\nvar debug = require('debug');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default['default']('ipfs-http-client:pubsub:subscribe');\nconst createSubscribe = (options, subsTracker) => {\n  return configure.configure(api => {\n    async function subscribe(topic, handler, options = {}) {\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          arg: topic,\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, {onMessage, onEnd, onError}) {\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: toString.toString(fromString.fromString(msg.from, 'base64pad'), 'base58btc'),\n          data: fromString.fromString(msg.data, 'base64pad'),\n          seqno: fromString.fromString(msg.seqno, 'base64pad'),\n          topicIDs: msg.topicIDs\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${ err.message }`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n  case 'aborted':\n    return true;\n  case 'abort':\n    return true;\n  default:\n    return error.name === 'AbortError';\n  }\n};\n\nexports.createSubscribe = createSubscribe;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}