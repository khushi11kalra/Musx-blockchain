{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst web3_1 = __importDefault(require(\"web3\"));\nconst ethereum_overloads_1 = require(\"./ethereum-overloads\");\nconst quorum_overloads_1 = require(\"./quorum-overloads\");\nconst fabric_evm_overloads_1 = require(\"./fabric-evm-overloads\");\nconst initInterface = web3Shim => __awaiter(this, void 0, void 0, function* () {\n  const networkTypes = new Map(Object.entries({\n    \"ethereum\": ethereum_overloads_1.EthereumDefinition,\n    \"quorum\": quorum_overloads_1.QuorumDefinition,\n    \"fabric-evm\": fabric_evm_overloads_1.FabricEvmDefinition\n  }));\n  networkTypes.get(web3Shim.networkType).initNetworkType(web3Shim);\n});\n;\n// March 14, 2019 - Mike Seese:\n// This shim was intended to be temporary (see the above comment)\n// with the idea of a more robust implementation. That implementation\n// would essentially take this shim and include it under the\n// ethereum/apis/web3 (or something like that) structure.\n// I chose to extend/inherit web3 here to keep scope minimal for\n// getting web3 to behave with Quorum and AxCore (future/concurrent PR).\n// I wanted to do as little changing to the original Truffle codebase, and\n// for it to still expect a web3 instance. Otherwise, the scope of these\n// quick support work would be high. The \"Web3Shim\" is a shim for only\n// web3.js, and it was not intended to serve as the general purpose\n// truffle <=> all DLTs adapter. We have other commitments currently that\n// should drive the development of the correct architecture of\n// `truffle-interface-adapter`that should use this work in a more\n// sane and organized manner.\nclass Web3Shim extends web3_1.default {\n  constructor(options) {\n    super();\n    if (options) {\n      this.networkType = options.networkType || \"ethereum\";\n      if (options.provider) {\n        this.setProvider(options.provider);\n      }\n    } else {\n      this.networkType = \"ethereum\";\n    }\n    initInterface(this);\n  }\n  setNetworkType(networkType) {\n    this.networkType = networkType;\n    initInterface(this);\n  }\n}\nexports.Web3Shim = Web3Shim;\n;","map":{"version":3,"names":["web3_1","__importDefault","require","ethereum_overloads_1","quorum_overloads_1","fabric_evm_overloads_1","initInterface","web3Shim","__awaiter","networkTypes","Map","Object","entries","EthereumDefinition","QuorumDefinition","FabricEvmDefinition","get","networkType","initNetworkType","Web3Shim","default","constructor","options","provider","setProvider","setNetworkType","exports"],"sources":["../lib/web3-shim.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,MAAA,GAAAC,eAAA,CAAAC,OAAA;AAGA,MAAAC,oBAAA,GAAAD,OAAA;AACA,MAAAE,kBAAA,GAAAF,OAAA;AACA,MAAAG,sBAAA,GAAAH,OAAA;AAEA,MAAMI,aAAa,GAASC,QAAkB,IAAIC,SAAA;EAE9C,MAAMC,YAAY,GAAuB,IAAIC,GAAG,CAACC,MAAM,CAACC,OAAO,CAAC;IAC9D,UAAU,EAAET,oBAAA,CAAAU,kBAAkB;IAC9B,QAAQ,EAAET,kBAAA,CAAAU,gBAAgB;IAC1B,YAAY,EAAET,sBAAA,CAAAU;GACf,CAAC,CAAC;EAEHN,YAAY,CAACO,GAAG,CAACT,QAAQ,CAACU,WAAW,CAAC,CAACC,eAAe,CAACX,QAAQ,CAAC;AAClE,CAAC;AAaF;AAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAaY,QAAS,SAAQnB,MAAA,CAAAoB,OAAI;EAGhCC,YAAYC,OAAyB;IACnC,KAAK,EAAE;IAEP,IAAIA,OAAO,EAAE;MACX,IAAI,CAACL,WAAW,GAAGK,OAAO,CAACL,WAAW,IAAI,UAAU;MAEpD,IAAIK,OAAO,CAACC,QAAQ,EAAE;QACpB,IAAI,CAACC,WAAW,CAACF,OAAO,CAACC,QAAQ,CAAC;;KAErC,MAAM;MACL,IAAI,CAACN,WAAW,GAAG,UAAU;;IAG/BX,aAAa,CAAC,IAAI,CAAC;EACrB;EAEAmB,cAAcA,CAACR,WAAwB;IACrC,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9BX,aAAa,CAAC,IAAI,CAAC;EACrB;;AAtBFoB,OAAA,CAAAP,QAAA,GAAAA,QAAA;AAuBC"},"metadata":{},"sourceType":"script"}