{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar multiaddr = require('multiaddr');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createPeers = configure.configure(api => {\n  async function peers() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {\n      Peers\n    } = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new multiaddr.Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n  return peers;\n});\nexports.createPeers = createPeers;","map":{"version":3,"names":["Object","defineProperty","exports","value","multiaddr","require","configure","toUrlSearchParams","createPeers","api","peers","options","arguments","length","undefined","res","post","signal","searchParams","headers","Peers","json","map","peer","addr","Multiaddr","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/swarm/peers.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createPeers = configure.configure(api => {\n  async function peers(options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return (Peers || []).map(peer => {\n      return {\n        addr: new multiaddr.Multiaddr(peer.Addr),\n        peer: peer.Peer,\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  }\n  return peers;\n});\n\nexports.createPeers = createPeers;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAMG,WAAW,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC7C,eAAeC,KAAKA,CAAA,EAAe;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC/B,MAAMG,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;MACxCC,MAAM,EAAEN,OAAO,CAACM,MAAM;MACtBC,YAAY,EAAEX,iBAAiB,CAACA,iBAAiB,CAACI,OAAO,CAAC;MAC1DQ,OAAO,EAAER,OAAO,CAACQ;IACnB,CAAC,CAAC;IACF,MAAM;MAACC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAChC,OAAO,CAACD,KAAK,IAAI,EAAE,EAAEE,GAAG,CAACC,IAAI,IAAI;MAC/B,OAAO;QACLC,IAAI,EAAE,IAAIpB,SAAS,CAACqB,SAAS,CAACF,IAAI,CAACG,IAAI,CAAC;QACxCH,IAAI,EAAEA,IAAI,CAACI,IAAI;QACfC,KAAK,EAAEL,IAAI,CAACM,KAAK;QACjBC,OAAO,EAAEP,IAAI,CAACQ,OAAO;QACrBC,OAAO,EAAET,IAAI,CAACU,OAAO;QACrBC,SAAS,EAAEX,IAAI,CAACY,SAAS,IAAI,IAAI,GAAGrB,SAAS,GAAGS,IAAI,CAACY,SAAS,KAAK,CAAC,GAAG,SAAS,GAAG;MACrF,CAAC;IACH,CAAC,CAAC;EACJ;EACA,OAAOzB,KAAK;AACd,CAAC,CAAC;AAEFR,OAAO,CAACM,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script"}