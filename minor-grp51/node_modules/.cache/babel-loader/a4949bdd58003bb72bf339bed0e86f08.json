{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\nvar toString = require('uint8arrays/to-string');\nconst createPut = configure.configure(api => {\n  function put(key, value) {\n    try {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return async function* () {\n        const controller = new nativeAbortController.AbortController();\n        const signal = abortSignal.abortSignal(controller.signal, options.signal);\n        const res = await api.post('dht/put', {\n          signal,\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            arg: toString.toString(key),\n            ...options\n          }),\n          ...(await multipartRequest.multipartRequest(value, controller, options.headers))\n        });\n        for await (let message of res.ndjson()) {\n          message = objectToCamel.objectToCamel(message);\n          if (message.responses) {\n            message.responses = message.responses.map(_ref => {\n              let {\n                ID,\n                Addrs\n              } = _ref;\n              return {\n                id: ID,\n                addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n              };\n            });\n          }\n          yield message;\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return put;\n});\nexports.createPut = createPut;","map":{"version":3,"names":["Object","defineProperty","exports","value","multiaddr","require","objectToCamel","configure","toUrlSearchParams","multipartRequest","abortSignal","nativeAbortController","toString","createPut","api","put","key","options","arguments","length","undefined","controller","AbortController","signal","res","post","searchParams","arg","headers","message","ndjson","responses","map","_ref","ID","Addrs","id","addrs","a","Multiaddr","e","Promise","reject"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/dht/put.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar multiaddr = require('multiaddr');\nvar objectToCamel = require('../lib/object-to-camel.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar abortSignal = require('../lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\nvar toString = require('uint8arrays/to-string');\n\nconst createPut = configure.configure(api => {\n  async function* put(key, value, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: toString.toString(key),\n        ...options\n      }),\n      ...await multipartRequest.multipartRequest(value, controller, options.headers)\n    });\n    for await (let message of res.ndjson()) {\n      message = objectToCamel.objectToCamel(message);\n      if (message.responses) {\n        message.responses = message.responses.map(({ID, Addrs}) => ({\n          id: ID,\n          addrs: (Addrs || []).map(a => new multiaddr.Multiaddr(a))\n        }));\n      }\n      yield message;\n    }\n  }\n  return put;\n});\n\nexports.createPut = createPut;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIC,aAAa,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACxD,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AACjE,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,mCAAmC,CAAC;AACnE,IAAIK,WAAW,GAAGL,OAAO,CAAC,wBAAwB,CAAC;AACnD,IAAIM,qBAAqB,GAAGN,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAIO,QAAQ,GAAGP,OAAO,CAAC,uBAAuB,CAAC;AAE/C,MAAMQ,SAAS,GAAGN,SAAS,CAACA,SAAS,CAACO,GAAG,IAAI;EAC3C,SAAgBC,GAAGA,CAACC,GAAG,EAAEb,KAAK;IAAA;MAAA,IAAEc,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QAC5C,MAAMG,UAAU,GAAG,IAAIV,qBAAqB,CAACW,eAAe,CAAC,CAAC;QAC9D,MAAMC,MAAM,GAAGb,WAAW,CAACA,WAAW,CAACW,UAAU,CAACE,MAAM,EAAEN,OAAO,CAACM,MAAM,CAAC;QACzE,MAAMC,GAAG,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,SAAS,EAAE;UACpCF,MAAM;UACNG,YAAY,EAAElB,iBAAiB,CAACA,iBAAiB,CAAC;YAChDmB,GAAG,EAAEf,QAAQ,CAACA,QAAQ,CAACI,GAAG,CAAC;YAC3B,GAAGC;UACL,CAAC,CAAC;UACF,IAAG,MAAMR,gBAAgB,CAACA,gBAAgB,CAACN,KAAK,EAAEkB,UAAU,EAAEJ,OAAO,CAACW,OAAO,CAAC;QAChF,CAAC,CAAC;QACF,WAAW,IAAIC,OAAO,IAAIL,GAAG,CAACM,MAAM,CAAC,CAAC,EAAE;UACtCD,OAAO,GAAGvB,aAAa,CAACA,aAAa,CAACuB,OAAO,CAAC;UAC9C,IAAIA,OAAO,CAACE,SAAS,EAAE;YACrBF,OAAO,CAACE,SAAS,GAAGF,OAAO,CAACE,SAAS,CAACC,GAAG,CAACC,IAAA;cAAA,IAAC;gBAACC,EAAE;gBAAEC;cAAK,CAAC,GAAAF,IAAA;cAAA,OAAM;gBAC1DG,EAAE,EAAEF,EAAE;gBACNG,KAAK,EAAE,CAACF,KAAK,IAAI,EAAE,EAAEH,GAAG,CAACM,CAAC,IAAI,IAAIlC,SAAS,CAACmC,SAAS,CAACD,CAAC,CAAC;cAC1D,CAAC;YAAA,CAAC,CAAC;UACL;UACA,MAAMT,OAAO;QACf;MACF,CAAC;IAAA,SAAAW,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOzB,GAAG;AACZ,CAAC,CAAC;AAEFb,OAAO,CAACW,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}