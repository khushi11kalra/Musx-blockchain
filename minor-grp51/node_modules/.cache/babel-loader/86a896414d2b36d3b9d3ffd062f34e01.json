{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar objectToCamelWithMetadata = require('../lib/object-to-camel-with-metadata.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createLs = configure.configure(api => {\n  function ls(path) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        if (!path) {\n          throw new Error('ipfs.files.ls requires a path');\n        }\n        const res = await api.post('files/ls', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            arg: cid.CID.asCID(path) ? `/ipfs/${path}` : path,\n            long: true,\n            ...options,\n            stream: true\n          }),\n          headers: options.headers\n        });\n        for await (const result of res.ndjson()) {\n          if ('Entries' in result) {\n            for (const entry of result.Entries || []) {\n              yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(entry));\n            }\n          } else {\n            yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(result));\n          }\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = cid.CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}\nexports.createLs = createLs;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","objectToCamelWithMetadata","configure","toUrlSearchParams","createLs","api","ls","path","options","arguments","length","undefined","Error","res","post","signal","searchParams","arg","CID","asCID","long","stream","headers","result","ndjson","entry","Entries","toCoreInterface","e","Promise","reject","hash","parse","type"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/files/ls.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar objectToCamelWithMetadata = require('../lib/object-to-camel-with-metadata.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createLs = configure.configure(api => {\n  async function* ls(path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.CID.asCID(path) ? `/ipfs/${ path }` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(result));\n      }\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = cid.CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}\n\nexports.createLs = createLs;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIC,yBAAyB,GAAGD,OAAO,CAAC,yCAAyC,CAAC;AAClF,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAMI,QAAQ,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC1C,SAAgBC,EAAEA,CAACC,IAAI;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QACrC,IAAI,CAACF,IAAI,EAAE;UACT,MAAM,IAAIK,KAAK,CAAC,+BAA+B,CAAC;QAClD;QACA,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,UAAU,EAAE;UACrCC,MAAM,EAAEP,OAAO,CAACO,MAAM;UACtBC,YAAY,EAAEb,iBAAiB,CAACA,iBAAiB,CAAC;YAChDc,GAAG,EAAElB,GAAG,CAACmB,GAAG,CAACC,KAAK,CAACZ,IAAI,CAAC,GAAI,SAASA,IAAM,EAAC,GAAGA,IAAI;YACnDa,IAAI,EAAE,IAAI;YACV,GAAGZ,OAAO;YACVa,MAAM,EAAE;UACV,CAAC,CAAC;UACFC,OAAO,EAAEd,OAAO,CAACc;QACnB,CAAC,CAAC;QACF,WAAW,MAAMC,MAAM,IAAIV,GAAG,CAACW,MAAM,CAAC,CAAC,EAAE;UACvC,IAAI,SAAS,IAAID,MAAM,EAAE;YACvB,KAAK,MAAME,KAAK,IAAIF,MAAM,CAACG,OAAO,IAAI,EAAE,EAAE;cACxC,MAAMC,eAAe,CAAC1B,yBAAyB,CAACA,yBAAyB,CAACwB,KAAK,CAAC,CAAC;YACnF;UACF,CAAC,MAAM;YACL,MAAME,eAAe,CAAC1B,yBAAyB,CAACA,yBAAyB,CAACsB,MAAM,CAAC,CAAC;UACpF;QACF;MACF,CAAC;IAAA,SAAAK,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOtB,EAAE;AACX,CAAC,CAAC;AACF,SAASqB,eAAeA,CAACF,KAAK,EAAE;EAC9B,IAAIA,KAAK,CAACM,IAAI,EAAE;IACdN,KAAK,CAAC1B,GAAG,GAAGA,GAAG,CAACmB,GAAG,CAACc,KAAK,CAACP,KAAK,CAACM,IAAI,CAAC;EACvC;EACA,OAAON,KAAK,CAACM,IAAI;EACjBN,KAAK,CAACQ,IAAI,GAAGR,KAAK,CAACQ,IAAI,KAAK,CAAC,GAAG,WAAW,GAAG,MAAM;EACpD,OAAOR,KAAK;AACd;AAEA5B,OAAO,CAACO,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script"}