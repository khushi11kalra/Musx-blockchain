{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\nconst decodePin = _ref => {\n  let {\n    Name: name,\n    Status: status,\n    Cid: cid$1\n  } = _ref;\n  return {\n    cid: cid.CID.parse(cid$1),\n    name,\n    status\n  };\n};\nconst encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nconst encodeCID = cid$1 => {\n  if (cid.CID.asCID(cid$1)) {\n    return cid$1.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid$1}`);\n  }\n};\nconst encodeQuery = _ref2 => {\n  let {\n    service,\n    cid,\n    name,\n    status,\n    all\n  } = _ref2;\n  const query = toUrlSearchParams.toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nconst encodeAddParams = _ref3 => {\n  let {\n    cid,\n    service,\n    background,\n    name,\n    origins\n  } = _ref3;\n  const params = toUrlSearchParams.toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};\nexports.decodePin = decodePin;\nexports.encodeAddParams = encodeAddParams;\nexports.encodeCID = encodeCID;\nexports.encodeQuery = encodeQuery;\nexports.encodeService = encodeService;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","toUrlSearchParams","decodePin","_ref","Name","name","Status","status","Cid","cid$1","CID","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","_ref2","all","query","force","undefined","append","encodeAddParams","_ref3","background","origins","params","arg","origin"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/pin/remote/utils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nconst decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid$1\n}) => {\n  return {\n    cid: cid.CID.parse(cid$1),\n    name,\n    status\n  };\n};\nconst encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nconst encodeCID = cid$1 => {\n  if (cid.CID.asCID(cid$1)) {\n    return cid$1.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid$1 }`);\n  }\n};\nconst encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams.toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nconst encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams.toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};\n\nexports.decodePin = decodePin;\nexports.encodeAddParams = encodeAddParams;\nexports.encodeCID = encodeCID;\nexports.encodeQuery = encodeQuery;\nexports.encodeService = encodeService;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}