{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FabricEvmDefinition = {\n  initNetworkType(web3) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // web3 expects getId to return a hexString convertible to a number\n      // for fabric-evm we ignore the hexToNumber output formatter\n      overrides.getId(web3);\n    });\n  }\n};\nconst overrides = {\n  // The ts-ignores are ignoring the checks that are\n  // saying that web3.eth.net.getId is a function and doesn't\n  // have a `method` property, which it does\n  \"getId\": web3 => {\n    // @ts-ignore\n    const _oldGetIdFormatter = web3.eth.net.getId.method.outputFormatter;\n    // @ts-ignore\n    web3.eth.net.getId.method.outputFormatter = hexId => {\n      // chaincode-fabric-evm currently returns a \"fabric-evm\" string\n      // instead of a hex networkID. Instead of trying to decode the hexToNumber,\n      // let's just accept `fabric-evm` as a valid networkID for now.\n      return hexId;\n    };\n  }\n};","map":{"version":3,"names":["exports","FabricEvmDefinition","initNetworkType","web3","overrides","getId","_oldGetIdFormatter","eth","net","method","outputFormatter","hexId"],"sources":["../lib/fabric-evm-overloads.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEaA,OAAA,CAAAC,mBAAmB,GAAG;EAC3BC,eAAeA,CAAEC,IAAc;;MACnC;MACA;MACAC,SAAS,CAACC,KAAK,CAACF,IAAI,CAAC;IACvB,CAAC;;CACF;AAED,MAAMC,SAAS,GAAG;EAClB;EACA;EACA;EACE,OAAO,EAAGD,IAAc,IAAI;IAC5B;IACA,MAAMG,kBAAkB,GAAGH,IAAI,CAACI,GAAG,CAACC,GAAG,CAACH,KAAK,CAACI,MAAM,CAACC,eAAe;IACpE;IACAP,IAAI,CAACI,GAAG,CAACC,GAAG,CAACH,KAAK,CAACI,MAAM,CAACC,eAAe,GAAIC,KAAU,IAAI;MACzD;MACA;MACA;MACA,OAAOA,KAAK;IACd,CAAC;EACD;CACD"},"metadata":{},"sourceType":"script"}