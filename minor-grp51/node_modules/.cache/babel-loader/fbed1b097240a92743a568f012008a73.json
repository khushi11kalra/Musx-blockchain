{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nconst createRm = configure.configure(api => {\n  function rm(cid) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        if (!Array.isArray(cid)) {\n          cid = [cid];\n        }\n        const res = await api.post('block/rm', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            arg: cid.map(cid => cid.toString()),\n            'stream-channels': true,\n            ...options\n          }),\n          headers: options.headers\n        });\n        for await (const removed of res.ndjson()) {\n          yield toCoreInterface(removed);\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = {\n    cid: cid.CID.parse(removed.Hash)\n  };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}\nexports.createRm = createRm;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","createRm","api","rm","options","arguments","length","undefined","Array","isArray","res","post","signal","searchParams","arg","map","toString","headers","removed","ndjson","toCoreInterface","e","Promise","reject","out","CID","parse","Hash","Error","error"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/block/rm.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createRm = configure.configure(api => {\n  async function* rm(cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed);\n    }\n  }\n  return rm;\n});\nfunction toCoreInterface(removed) {\n  const out = { cid: cid.CID.parse(removed.Hash) };\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n  return out;\n}\n\nexports.createRm = createRm;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AAEjE,MAAMG,QAAQ,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC1C,SAAgBC,EAAEA,CAACN,GAAG;IAAA;MAAA,IAAEO,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QACpC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACZ,GAAG,CAAC,EAAE;UACvBA,GAAG,GAAG,CAACA,GAAG,CAAC;QACb;QACA,MAAMa,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,UAAU,EAAE;UACrCC,MAAM,EAAER,OAAO,CAACQ,MAAM;UACtBC,YAAY,EAAEb,iBAAiB,CAACA,iBAAiB,CAAC;YAChDc,GAAG,EAAEjB,GAAG,CAACkB,GAAG,CAAClB,GAAG,IAAIA,GAAG,CAACmB,QAAQ,CAAC,CAAC,CAAC;YACnC,iBAAiB,EAAE,IAAI;YACvB,GAAGZ;UACL,CAAC,CAAC;UACFa,OAAO,EAAEb,OAAO,CAACa;QACnB,CAAC,CAAC;QACF,WAAW,MAAMC,OAAO,IAAIR,GAAG,CAACS,MAAM,CAAC,CAAC,EAAE;UACxC,MAAMC,eAAe,CAACF,OAAO,CAAC;QAChC;MACF,CAAC;IAAA,SAAAG,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOlB,EAAE;AACX,CAAC,CAAC;AACF,SAASiB,eAAeA,CAACF,OAAO,EAAE;EAChC,MAAMM,GAAG,GAAG;IAAE3B,GAAG,EAAEA,GAAG,CAAC4B,GAAG,CAACC,KAAK,CAACR,OAAO,CAACS,IAAI;EAAE,CAAC;EAChD,IAAIT,OAAO,CAACU,KAAK,EAAE;IACjBJ,GAAG,CAACK,KAAK,GAAG,IAAID,KAAK,CAACV,OAAO,CAACU,KAAK,CAAC;EACtC;EACA,OAAOJ,GAAG;AACZ;AAEA7B,OAAO,CAACM,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script"}