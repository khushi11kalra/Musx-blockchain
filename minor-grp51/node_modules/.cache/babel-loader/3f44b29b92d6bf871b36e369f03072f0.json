{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar abortSignal = require('../lib/abort-signal.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar nativeAbortController = require('native-abort-controller');\nvar cid = require('multiformats/cid');\nconst createImport = configure.configure(api => {\n  function dagImport(source) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const controller = new nativeAbortController.AbortController();\n        const signal = abortSignal.abortSignal(controller.signal, options.signal);\n        const {\n          headers,\n          body\n        } = await multipartRequest.multipartRequest(source, controller, options.headers);\n        const res = await api.post('dag/import', {\n          signal,\n          headers,\n          body,\n          searchParams: toUrlSearchParams.toUrlSearchParams({\n            'pin-roots': options.pinRoots\n          })\n        });\n        for await (const {\n          Root\n        } of res.ndjson()) {\n          if (Root !== undefined) {\n            const {\n              Cid: {\n                '/': Cid\n              },\n              PinErrorMsg\n            } = Root;\n            yield {\n              root: {\n                cid: cid.CID.parse(Cid),\n                pinErrorMsg: PinErrorMsg\n              }\n            };\n          }\n        }\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return dagImport;\n});\nexports.createImport = createImport;","map":{"version":3,"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","abortSignal","multipartRequest","nativeAbortController","cid","createImport","api","dagImport","source","options","arguments","length","undefined","controller","AbortController","signal","headers","body","res","post","searchParams","pinRoots","Root","ndjson","Cid","PinErrorMsg","root","CID","parse","pinErrorMsg","e","Promise","reject"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/dag/import.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar abortSignal = require('../lib/abort-signal.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar nativeAbortController = require('native-abort-controller');\nvar cid = require('multiformats/cid');\n\nconst createImport = configure.configure(api => {\n  async function* dagImport(source, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const {headers, body} = await multipartRequest.multipartRequest(source, controller, options.headers);\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams.toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    });\n    for await (const {Root} of res.ndjson()) {\n      if (Root !== undefined) {\n        const {\n          Cid: {'/': Cid},\n          PinErrorMsg\n        } = Root;\n        yield {\n          root: {\n            cid: cid.CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        };\n      }\n    }\n  }\n  return dagImport;\n});\n\nexports.createImport = createImport;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC9C,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACjE,IAAIE,WAAW,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACnD,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,mCAAmC,CAAC;AACnE,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAIK,GAAG,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAErC,MAAMM,YAAY,GAAGP,SAAS,CAACA,SAAS,CAACQ,GAAG,IAAI;EAC9C,SAAgBC,SAASA,CAACC,MAAM;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QAC9C,MAAMG,UAAU,GAAG,IAAIV,qBAAqB,CAACW,eAAe,CAAC,CAAC;QAC9D,MAAMC,MAAM,GAAGd,WAAW,CAACA,WAAW,CAACY,UAAU,CAACE,MAAM,EAAEN,OAAO,CAACM,MAAM,CAAC;QACzE,MAAM;UAACC,OAAO;UAAEC;QAAI,CAAC,GAAG,MAAMf,gBAAgB,CAACA,gBAAgB,CAACM,MAAM,EAAEK,UAAU,EAAEJ,OAAO,CAACO,OAAO,CAAC;QACpG,MAAME,GAAG,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,YAAY,EAAE;UACvCJ,MAAM;UACNC,OAAO;UACPC,IAAI;UACJG,YAAY,EAAEpB,iBAAiB,CAACA,iBAAiB,CAAC;YAAE,WAAW,EAAES,OAAO,CAACY;UAAS,CAAC;QACrF,CAAC,CAAC;QACF,WAAW,MAAM;UAACC;QAAI,CAAC,IAAIJ,GAAG,CAACK,MAAM,CAAC,CAAC,EAAE;UACvC,IAAID,IAAI,KAAKV,SAAS,EAAE;YACtB,MAAM;cACJY,GAAG,EAAE;gBAAC,GAAG,EAAEA;cAAG,CAAC;cACfC;YACF,CAAC,GAAGH,IAAI;YACR,MAAM;cACJI,IAAI,EAAE;gBACJtB,GAAG,EAAEA,GAAG,CAACuB,GAAG,CAACC,KAAK,CAACJ,GAAG,CAAC;gBACvBK,WAAW,EAAEJ;cACf;YACF,CAAC;UACH;QACF;MACF,CAAC;IAAA,SAAAK,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOvB,SAAS;AAClB,CAAC,CAAC;AAEFX,OAAO,CAACS,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script"}