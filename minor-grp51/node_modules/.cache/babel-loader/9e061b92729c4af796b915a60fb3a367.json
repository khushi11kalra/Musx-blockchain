{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar cid = require('multiformats/cid');\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\nconst createGet = configure.configure(api => {\n  function get(path) {\n    try {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return async function* () {\n        const opts = {\n          arg: `${path instanceof Uint8Array ? cid.CID.decode(path) : path}`,\n          ...options\n        };\n        if (opts.compressionLevel) {\n          opts['compression-level'] = opts.compressionLevel;\n          delete opts.compressionLevel;\n        }\n        const res = await api.post('get', {\n          signal: options.signal,\n          searchParams: toUrlSearchParams.toUrlSearchParams(opts),\n          headers: options.headers\n        });\n        yield* res.iterator();\n      }();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  return get;\n});\nexports.createGet = createGet;","map":{"version":3,"names":["Object","defineProperty","exports","value","cid","require","configure","toUrlSearchParams","createGet","api","get","path","options","arguments","length","undefined","opts","arg","Uint8Array","CID","decode","compressionLevel","res","post","signal","searchParams","headers","iterator","e","Promise","reject"],"sources":["C:/Users/khushi kalra/Desktop/5th semester projects/Minor1/minor/blockstudio/App/minor-grp51/node_modules/ipfs-http-client/cjs/src/get.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('./lib/configure.js');\nvar toUrlSearchParams = require('./lib/to-url-search-params.js');\n\nconst createGet = configure.configure(api => {\n  async function* get(path, options = {}) {\n    const opts = {\n      arg: `${ path instanceof Uint8Array ? cid.CID.decode(path) : path }`,\n      ...options\n    };\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel;\n      delete opts.compressionLevel;\n    }\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(opts),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  }\n  return get;\n});\n\nexports.createGet = createGet;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,GAAG,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACrC,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC7C,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,+BAA+B,CAAC;AAEhE,MAAMG,SAAS,GAAGF,SAAS,CAACA,SAAS,CAACG,GAAG,IAAI;EAC3C,SAAgBC,GAAGA,CAACC,IAAI;IAAA;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,0BAAE;QACtC,MAAMG,IAAI,GAAG;UACXC,GAAG,EAAG,GAAGN,IAAI,YAAYO,UAAU,GAAGd,GAAG,CAACe,GAAG,CAACC,MAAM,CAACT,IAAI,CAAC,GAAGA,IAAM,EAAC;UACpE,GAAGC;QACL,CAAC;QACD,IAAII,IAAI,CAACK,gBAAgB,EAAE;UACzBL,IAAI,CAAC,mBAAmB,CAAC,GAAGA,IAAI,CAACK,gBAAgB;UACjD,OAAOL,IAAI,CAACK,gBAAgB;QAC9B;QACA,MAAMC,GAAG,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,KAAK,EAAE;UAChCC,MAAM,EAAEZ,OAAO,CAACY,MAAM;UACtBC,YAAY,EAAElB,iBAAiB,CAACA,iBAAiB,CAACS,IAAI,CAAC;UACvDU,OAAO,EAAEd,OAAO,CAACc;QACnB,CAAC,CAAC;QACF,OAAOJ,GAAG,CAACK,QAAQ,CAAC,CAAC;MACvB,CAAC;IAAA,SAAAC,CAAA;MAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;IAAA;EAAA;EACD,OAAOlB,GAAG;AACZ,CAAC,CAAC;AAEFR,OAAO,CAACM,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script"}